Demo Script
1) Show the Lambda
2) Run/debug in pure local (i.e. in VSCode)
3) Show/describe the template
4) Convert template to plain-old-Cloudformation and show how verbose it is. 
    sam validate --debug
5) Invoke the lambda locally
    echo "{\"formula\":\"9 + 3\"}" | sam local invoke
6) Invoke the API locally
    sam build --template template.yaml --manifest ./requirements.txt --use-container
    cd .aws-sam/build
        show the build directory contents: packages loaded in lambda-compatible style
    sam local start-api -d 5890
    curl -X POST -H "Content-Type: application/json" -d '{ "formula": "6 + 5" }' http://127.0.0.1:3000/calc
7) Implement a new feature: subtraction (but with a bug...)
    - Make the split regex ([\+,\-]) 
    - Add (buggy) code to do this:
        elif op == '-':
            retVal['answer'] = b - a
8) Show how hotloader makes change immediately available to the API
    curl -X POST -H "Content-Type: application/json" -d '{ "formula": "6 - 5" }' http://127.0.0.1:3000/calc
        ...but: the answer's wrong: -1.
9) Remote-debug with a breakpoint on the "retVal['answer'] = b - a" line
        Uncomment the two ptvsd lines at the top of the module
        Save / Build
        In VSCode 
            Go to the Debug view
            Select the "Python: Remote Attach - sam local" profile
            Set a breakpoint on the new "b - a" line.   
        Send a test request:  (You can't connect the debugger until you do)
            curl -X POST -H "Content-Type: application/json" -d '{ "formula": "6 - 5" }' http://127.0.0.1:3000/calc
        Launch the VSCode debugger with the green "Play" triangle at the top-left.
            Observe the breakpoint gets hit.
            Inspect some variables
            Identify the bug (should be a - b)
            Run the debugger to completion
                (Note that you want to debug again you'll have to send a test request AND connect again).
        Fix the bug, save, build.
        Test again; success.
10) Package
        sam package --template template.yaml --s3-bucket _______
11) Deploy to AWS.
        TBD
12) Invoke against AWS.

